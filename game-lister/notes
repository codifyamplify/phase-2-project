time to sketch out the structure of what the user will see
SKETCH #1

Header: Game Lister
subheader: Your one-stop-shop to keep track of your dream playlist of the games you are most excited about!
-no buttons, only text
-----------------------

Module: Add a New Game
subheader: Here you can add a game that you would like to play someday, and never forget it until you mark it off as "completed!" Just provide the name of the game in the "text field", and an image URL in the "image URL field." (We recommend grabbing an image URL from igdb.com - the internet game database!)
- self contained module that will receive text input (game name) and text input (image URL)
- each text field will need to have state to capture the user inputted text

Module: Your Dream Playlist
subheader: Here is your handmade list of all the games you are excited to get to someday. Never forget that hidden gem you heard about from an old friend!
- there will be a short list of games included at startup
- a variable will store a gamesList, which will be mapped over, and each will be rendered into a card component with the following:
    - a game name
    - a game cover image
    - a "completed" checkbox
    --abandoning state update for checknbox. PATCH request not required
THIS VERSION DOES NOT SATISFY ROUTING REQUIREMENTS. A NAVBAR COMPONENT WILL NEED TO BE ADDED.

Component heirarchy sketch:

App
>>Header(non functional)
>>GamesList
>>>GameForm (create a new game entry)
>>>GameCard
>>GameFilter(possibly add filter by completed status functionality)

State heirarchy sketch:
App
>>GamesList(fetches data from db.json)(passes down to GameCard)

===================================================================================

Known Issues:
- json.server port issue. commit message: "discovered issue with json-server. have to start json-
server first, then run npm start, which requires npm to start on a different port, since json-server is
 already running on 3000 port. don't know how to resolve. will need instructor's guidance."

 Daily Goals: 11/7/22
 - learn to reset AddNewGame form to text fields are empty or hold default text <check!>
 - learn routing project requirements <check!>
 - review lecture with Enoch on Routing basics
 - implement routing
 - if unsuccessful dig into curriculum
 - if successful review post project tasks

notes to self 11/7/22: install react router by running this command:
- npm install react-router-dom@v5
- if you don't include @v5 at the end you will get a more recent version. we want to use v5 for this project
- THIS IS ALL THE SETUP REQUIRED TO USE REACT-ROUTER
- Use RESTful conventions for path naming
- use at least THREE routes
- using a Switch makes sure that the first (truthy) path found is the ONLY path loaded (no unintended stacking appending)
- INCLUDE NAVBAR. this will require a component reorganization.
- Only use exact pathing in Routes, NOT IN LINKS. in links use to="/header"

Updated Component Heirarchy Sketch:
- App
    - Header
    - GamesList
        - AddNewGames
        - GameCard

Components Sketch #2 - covering only major changes to component AND new components
- create simple PageNotFound component (this can be a route!)

========================================================================

Daily Goals: 11/8/22
- build out README.md <check!>
- clear out console.logs <check!>
- clear out commented-out / rejected code <check!>
- remove unused Block component
- verify everything still works; routes, add functions
- blog post
- project video
- submit
-contact Enoch